{"version":3,"sources":["BooksAPI.ts","components/SearchBooksBar.tsx","components/BookInfoCover.tsx","components/Bookshelf.tsx","components/RouteBookshelfList.tsx","components/BookInfoShelfChanger.tsx","components/BookInfoTitle.tsx","components/BookInfoAuthors.tsx","components/BookInfoPublish.tsx","components/BookInfoDescription.tsx","components/BookDetails.tsx","components/BookItem.tsx","components/SearchBooksResult.tsx","components/RouteSearchBooks.tsx","components/RouteBookDetails.tsx","components/Header.tsx","components/RouteNotFound.tsx","App.tsx","index.tsx"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","get","bookId","fetch","then","res","json","data","book","update","shelf","id","method","body","JSON","stringify","search","query","maxResults","books","SearchBooksBar","setSearchBooks","useState","setQuery","useEffect","keywords","q","trim","toLowerCase","a","BooksAPI","length","updated","updateSearchResult","searchKeywords","map","r","match","filter","b","className","to","type","placeholder","debounceTimeout","onChange","e","target","value","BookInfoCover","style","width","height","backgroundImage","imageLinks","thumbnail","Bookshelf","title","onChangeShelf","Bookshelfs","key","RouteBookshelfList","bs","BookInfoShelfChanger","onAddBook","disabled","BookInfoTitle","subtitle","BookInfoAuthors","isliteral","authors","author","index","BookInfoPublish","publisher","publishedDate","BookInfoDescription","description","BookDetails","Modal","setAppElement","BookItem","fromSearch","modalIsOpen","setModalIsOpen","closeModal","onClick","state","bookFromParent","isOpen","onRequestClose","contentLabel","SearchBooksResult","searchBooks","RouteSearchBooks","RouteBookDetails","useParams","useLocation","setBook","navigate","useNavigate","undefined","Error","getBook","Header","NotFound","App","setBooks","getBooks","add","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f77df3d.chunk.js","sourcesContent":["import { Book } from './models/Book';\n\nconst api = 'https://reactnd-books-api.udacity.com';\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: 'application/json',\n  Authorization: token\n};\n\nexport const get = (bookId: string) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book: Book, shelf: string) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then((res) => res.json());\n\nexport const search = (query: string, maxResults?: string) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query, maxResults })\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import * as BooksAPI from '../BooksAPI';\nimport { Link } from 'react-router-dom';\nimport { ChangeEvent, Dispatch, SetStateAction, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DebounceInput } from 'react-debounce-input';\nimport { Book } from '../models/Book';\n\ntype Props = {\n  books: Book[];\n  setSearchBooks: Dispatch<SetStateAction<Book[]>>;\n};\n\nconst SearchBooksBar = ({ books, setSearchBooks }: Props) => {\n  const [query, setQuery] = useState<string>('');\n\n  useEffect(() => {\n    const searchKeywords = (keywords: string): void => {\n      const q = keywords.trim().toLowerCase();\n\n      const search = async () => {\n        const res = await BooksAPI.search(q);\n        if (res.length > 0) {\n          const updated = updateSearchResult(res);\n          setSearchBooks(updated);\n        } else {\n          setSearchBooks([]);\n        }\n      };\n      q.length === 0 ? setSearchBooks([]) : search();\n    };\n    searchKeywords(query);\n  }, [query]);\n\n  const updateSearchResult = (res: Book[]): Book[] => {\n    return res.map((r) => {\n      const match = books.filter((b) => b.id === r.id);\n      return match.length > 0 ? match[0] : r;\n    });\n  };\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div className=\"search-books-bar\">\n      <Link to=\"/\" className=\"close-search\">\n        Close\n      </Link>\n      <div className=\"search-books-input-wrapper\">\n        <DebounceInput type=\"text\" placeholder=\"Search by title, author, or ISBN.\" debounceTimeout={500} onChange={handleChange} />\n      </div>\n    </div>\n  );\n};\nSearchBooksBar.propTypes = {\n  books: PropTypes.array,\n  setSearchBooks: PropTypes.func\n};\nexport default SearchBooksBar;\n","import PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\n\nconst BookInfoCover = ({ book }: { book: Book }) => {\n  return (\n    <div\n      className=\"book-cover\"\n      style={{\n        width: 128,\n        height: 193,\n        backgroundImage: `url(\"${book.imageLinks?.thumbnail}\")`\n      }}\n    />\n  );\n};\nBookInfoCover.propTypes = {\n  book: PropTypes.object\n};\nexport default BookInfoCover;\n","import BookItem from './BookItem';\nimport PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\n\ntype Props = {\n  title: string;\n  books: Book[];\n  onChangeShelf: (book: Book) => void;\n};\nconst Bookshelf = ({ title, books, onChangeShelf }: Props) => {\n  return (\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{title}</h2>\n      <div className=\"bookshelf-books\">\n        <ol className=\"books-grid\">\n          {books?.map((b) => (\n            <li key={b.id}>\n              <BookItem book={b} onChangeShelf={onChangeShelf} />\n            </li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n};\nBookshelf.propTypes = {\n  title: PropTypes.string,\n  books: PropTypes.array,\n  onChangeShelf: PropTypes.func\n};\nexport default Bookshelf;\n","import { Link } from 'react-router-dom';\nimport Bookshelf from './Bookshelf';\nimport PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\n\nconst Bookshelfs = [\n  {\n    key: 'currentlyReading',\n    title: 'Currently Reading'\n  },\n  {\n    key: 'wantToRead',\n    title: 'Want to Read'\n  },\n  {\n    key: 'read',\n    title: 'Read'\n  }\n];\n\ntype Props = {\n  books: Book[];\n  onChangeShelf: (book: Book) => void;\n};\n\nconst RouteBookshelfList = ({ books, onChangeShelf }: Props) => {\n  return (\n    <div className=\"list-books\">\n      <div className=\"list-books-content\">\n        {Bookshelfs.map((bs) => (\n          <Bookshelf key={bs.key} title={bs.title} books={books.filter((b) => b.shelf === bs.key)} onChangeShelf={onChangeShelf} />\n        ))}\n      </div>\n      <div className=\"open-search\">\n        <Link to=\"/search\">Add a book</Link>\n      </div>\n    </div>\n  );\n};\nRouteBookshelfList.propTypes = {\n  books: PropTypes.array,\n  onChangeShelf: PropTypes.func\n};\nexport { RouteBookshelfList as default, Bookshelfs };\n","import { Bookshelfs } from './RouteBookshelfList';\nimport PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\nimport { ChangeEvent } from 'react';\n\ntype Props = {\n  book: Book;\n  onChangeShelf?: (book: Book) => void;\n  onAddBook?: (book: Book) => void;\n};\nconst BookInfoShelfChanger = ({ book, onChangeShelf, onAddBook }: Props) => {\n  const handleChange = (e: ChangeEvent<HTMLSelectElement>) => {\n    book.shelf = e.target.value;\n    onChangeShelf ? onChangeShelf(book) : onAddBook && onAddBook(book);\n  };\n\n  return (\n    <div className=\"book-shelf-changer\">\n      <select value={book.shelf ? book.shelf : 'none'} onChange={handleChange}>\n        <option value=\"label\" disabled>\n          {book.shelf && book.shelf !== 'none' ? 'Move to...' : 'Add to...'}\n        </option>\n        {Bookshelfs.map((bs) => (\n          <option key={bs.key} value={bs.key}>\n            {bs.title}\n          </option>\n        ))}\n        <option value=\"none\">None</option>\n      </select>\n    </div>\n  );\n};\nBookInfoShelfChanger.propTypes = {\n  book: PropTypes.object,\n  onChangeShelf: PropTypes.func,\n  onAddBook: PropTypes.func\n};\nexport default BookInfoShelfChanger;\n","import PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\n\nconst BookInfoTitle = ({ book }: { book: Book }) => {\n  return (\n    <div className=\"book-title\">\n      {book.title}\n      {book.subtitle ? ` - ${book.subtitle}` : ''}\n    </div>\n  );\n};\nBookInfoTitle.propTypes = { book: PropTypes.object };\n\nexport default BookInfoTitle;\n","import PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\n\ntype Props = {\n  book: Book;\n  isliteral?: boolean;\n};\nconst BookInfoAuthors = ({ book, isliteral }: Props) => {\n  return (\n    <div className=\"book-authors\">\n      {isliteral ? (\n        <span>\n          <span>By </span>\n          <strong>{book.authors?.map((author, index) => (index === 0 ? author : `, ${author}`))}</strong>\n        </span>\n      ) : (\n        <span>{book.authors?.map((author, index) => (index === 0 ? author : `, ${author}`))}</span>\n      )}\n    </div>\n  );\n};\nBookInfoAuthors.propTypes = { book: PropTypes.object, isliteral: PropTypes.bool };\n\nexport default BookInfoAuthors;\n","import PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\n\nconst BookInfoPublish = ({ book }: { book: Book }) => {\n  return (\n    <div className=\"book-publish\">\n      <span>Published </span>\n      {book.publisher ? (\n        <span>\n          <span>By </span>\n          <strong>{book.publisher} </strong>\n        </span>\n      ) : (\n        ''\n      )}\n      {book.publishedDate ? (\n        <span>\n          <span>in </span>\n          <strong>{book.publishedDate}</strong>\n        </span>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\nBookInfoPublish.propTypes = { book: PropTypes.object };\n\nexport default BookInfoPublish;\n","import PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\n\nconst BookInfoDescription = ({ book }: { book: Book }) => {\n  return (\n    <div className=\"book-description\">\n      <div>{book.description ? book.description : 'No description available.'}</div>\n    </div>\n  );\n};\nBookInfoDescription.propTypes = { book: PropTypes.object };\n\nexport default BookInfoDescription;\n","import PropTypes from 'prop-types';\nimport BookInfoCover from './BookInfoCover';\nimport BookInfoShelfChanger from './BookInfoShelfChanger';\nimport BookInfoTitle from './BookInfoTitle';\nimport BookInfoAuthors from './BookInfoAuthors';\nimport BookInfoPublish from './BookInfoPublish';\nimport BookInfoDescription from './BookInfoDescription';\nimport { Book } from '../models/Book';\n\ntype Props = {\n  book: Book;\n  onChangeShelf?: (book: Book) => void;\n  onAddBook?: (book: Book) => void;\n};\n\nconst BookDetails = ({ book, onChangeShelf, onAddBook }: Props) => {\n  return (\n    <div className=\"book-details\">\n      <div className=\"book-top\">\n        <BookInfoCover book={book} />\n        <BookInfoShelfChanger book={book} onChangeShelf={onChangeShelf} onAddBook={onAddBook} />\n      </div>\n      <div className=\"book-right\">\n        <BookInfoTitle book={book} />\n        <BookInfoAuthors book={book} isliteral={true} />\n        <BookInfoPublish book={book} />\n        <BookInfoDescription book={book} />\n      </div>\n    </div>\n  );\n};\nBookDetails.propTypes = {\n  book: PropTypes.object,\n  onChangeShelf: PropTypes.func,\n  onAddBook: PropTypes.func\n};\nexport default BookDetails;\n","import { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport BookInfoCover from './BookInfoCover';\nimport BookInfoShelfChanger from './BookInfoShelfChanger';\nimport BookInfoTitle from './BookInfoTitle';\nimport BookInfoAuthors from './BookInfoAuthors';\nimport BookDetails from './BookDetails';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\nimport { Book } from '../models/Book';\n\ntype Props = {\n  book: Book;\n  onChangeShelf?: (book: Book) => void;\n  onAddBook?: (book: Book) => void;\n  fromSearch?: boolean;\n};\n\nModal.setAppElement('#root');\nconst BookItem = ({ book, onChangeShelf, onAddBook, fromSearch }: Props) => {\n  const [modalIsOpen, setModalIsOpen] = useState<boolean>(false);\n\n  const openModal = (): void => {\n    setModalIsOpen(true);\n  };\n  const closeModal = (): void => {\n    setModalIsOpen(false);\n  };\n\n  return (\n    <div className=\"book\">\n      <div className=\"book-top\">\n        {fromSearch ? (\n          <Link to=\"#\" onClick={openModal}>\n            <BookInfoCover book={book} />\n          </Link>\n        ) : (\n          <Link to={`/book/${book.id}`} state={{ bookFromParent: book }}>\n            <BookInfoCover book={book} />\n          </Link>\n        )}\n        <BookInfoShelfChanger book={book} onChangeShelf={onChangeShelf} onAddBook={onAddBook} />\n      </div>\n\n      <BookInfoTitle book={book} />\n      <BookInfoAuthors book={book} />\n\n      {fromSearch ? (\n        <Modal isOpen={modalIsOpen} onRequestClose={closeModal} className=\"book-details-modal\" contentLabel=\"Book Details\">\n          <Link to=\"#\" onClick={closeModal} className=\"close-modal\">\n            Close\n          </Link>\n          <BookDetails book={book} onChangeShelf={onChangeShelf} onAddBook={onAddBook} />\n        </Modal>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n\nBookItem.propTypes = {\n  book: PropTypes.object,\n  onChangeShelf: PropTypes.func,\n  onAddBook: PropTypes.func,\n  fromSearch: PropTypes.bool\n};\nexport default BookItem;\n","import BookItem from './BookItem';\nimport PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\n\ntype Props = {\n  searchBooks: Book[];\n  onChangeShelf: (book: Book) => void;\n  onAddBook: (book: Book) => void;\n};\n\nconst SearchBooksResult = ({ searchBooks, onChangeShelf, onAddBook }: Props) => {\n  return (\n    <div className=\"search-books-results\">\n      <ol className=\"books-grid\">\n        {searchBooks.length > 0 ? (\n          searchBooks.map((b) => (\n            <li key={b.id}>\n              {b.shelf ? <BookItem book={b} fromSearch={true} onChangeShelf={onChangeShelf} /> : <BookItem book={b} fromSearch={true} onAddBook={onAddBook} />}\n            </li>\n          ))\n        ) : (\n          <span>No result found.</span>\n        )}\n      </ol>\n    </div>\n  );\n};\n\nSearchBooksResult.propTypes = {\n  searchBooks: PropTypes.array,\n  onAddBook: PropTypes.func,\n  onChangeShelf: PropTypes.func\n};\nexport default SearchBooksResult;\n","import { useState } from 'react';\nimport SearchBooksBar from './SearchBooksBar';\nimport SearchBooksResult from './SearchBooksResult';\nimport PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\n\ntype Props = {\n  books: Book[];\n  onChangeShelf: (book: Book) => void;\n  onAddBook: (book: Book) => void;\n};\n\nconst RouteSearchBooks = ({ books, onChangeShelf, onAddBook }: Props) => {\n  const [searchBooks, setSearchBooks] = useState<Book[]>([]);\n\n  return (\n    <div className=\"search-books\">\n      <SearchBooksBar books={books} setSearchBooks={setSearchBooks} />\n      <SearchBooksResult searchBooks={searchBooks} onAddBook={onAddBook} onChangeShelf={onChangeShelf} />\n    </div>\n  );\n};\nRouteSearchBooks.propTypes = {\n  books: PropTypes.array,\n  onAddBook: PropTypes.func,\n  onChangeShelf: PropTypes.func\n};\nexport default RouteSearchBooks;\n","import { useEffect, useState } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI';\nimport BookDetails from './BookDetails';\nimport PropTypes from 'prop-types';\nimport { Book } from '../models/Book';\n\ntype Props = {\n  onChangeShelf: (book: Book) => void;\n  onAddBook: (book: Book) => void;\n};\nconst RouteBookDetails = ({ onChangeShelf, onAddBook }: Props) => {\n  const { bookId } = useParams<{ bookId: string | undefined }>();\n  const location = useLocation();\n  const { bookFromParent } = location.state || { bookFromParent: null };\n  const [book, setBook] = useState<Book>(bookFromParent);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const getBook = async () => {\n      try {\n        if (bookId === undefined) {\n          throw new Error('Missing bookId in the URL.');\n        }\n        const res = await BooksAPI.get(bookId);\n        setBook(res);\n      } catch (err) {\n        navigate('/404');\n      }\n    };\n    if (book === null) getBook();\n  }, [bookId, book]);\n\n  return <div className=\"container\">{book ? <BookDetails book={book} onChangeShelf={onChangeShelf} onAddBook={onAddBook} /> : ''}</div>;\n};\n\nRouteBookDetails.propTypes = {\n  onChangeShelf: PropTypes.func,\n  onAddBook: PropTypes.func,\n  bookFromModal: PropTypes.object\n};\nexport default RouteBookDetails;\n","import { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"list-books-title\">\n      <h1>\n        <Link to=\"/\" className=\"list-books-title-link\">\n          MyReads\n        </Link>\n      </h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import { Link } from 'react-router-dom';\n\nconst NotFound = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"not-found\">\n        <h3>Page Not Found</h3>\n        <Link to=\"/\">Return to Home page</Link>\n      </div>\n    </div>\n  );\n};\nexport default NotFound;\n","import './App.css';\nimport { useEffect, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\nimport RouteSearchBooks from './components/RouteSearchBooks';\nimport RouteBookshelfList from './components/RouteBookshelfList';\nimport RouteBookDetails from './components/RouteBookDetails';\nimport Header from './components/Header';\nimport NotFound from './components/RouteNotFound';\nimport { Book } from './models/Book';\n\nfunction App() {\n  const [books, setBooks] = useState<Book[]>([]);\n\n  useEffect(() => {\n    const getBooks = async (): Promise<void> => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    };\n    getBooks();\n  }, []);\n\n  const onChangeShelf = (book: Book): void => {\n    const update = async () => {\n      await BooksAPI.update(book, book.shelf);\n      setBooks(books.map((b) => (b.id === book.id ? book : b)));\n    };\n    update();\n  };\n\n  const onAddBook = (book: Book): void => {\n    const add = async () => {\n      await BooksAPI.update(book, book.shelf);\n      setBooks([...books, book]);\n    };\n    add();\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<RouteBookshelfList books={books} onChangeShelf={onChangeShelf} />} />\n        <Route path=\"/book/:bookId\" element={<RouteBookDetails onChangeShelf={onChangeShelf} onAddBook={onAddBook} />} />\n\n        <Route path=\"/search\" element={<RouteSearchBooks books={books} onAddBook={onAddBook} onChangeShelf={onChangeShelf} />} />\n        <Route path=\"/404\" element={<NotFound />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}